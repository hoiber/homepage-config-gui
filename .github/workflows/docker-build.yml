name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY_IMAGE: hoiber/homepage-config-editor

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
        variant:
          - name: live
            dockerfile: Dockerfile
            tag_suffix: ""
          - name: static
            dockerfile: Dockerfile.static
            tag_suffix: "-static"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: hoiber
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}
        tags: |
          type=ref,event=branch,suffix=${{ matrix.variant.tag_suffix }}
          type=ref,event=pr,suffix=${{ matrix.variant.tag_suffix }}
          type=semver,pattern={{version}},suffix=${{ matrix.variant.tag_suffix }}
          type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.variant.tag_suffix }}
          type=semver,pattern={{major}},suffix=${{ matrix.variant.tag_suffix }}
          type=raw,value=latest,enable={{is_default_branch}},suffix=${{ matrix.variant.tag_suffix }}

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.variant.dockerfile }}
        platforms: ${{ matrix.platform }}
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Export digest
      run: |
        mkdir -p /tmp/digests/${{ matrix.variant.name }}
        digest="${{ steps.build.outputs.digest }}"
        touch "/tmp/digests/${{ matrix.variant.name }}/${digest#sha256:}"

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ matrix.variant.name }}-${{ strategy.job-index }}
        path: /tmp/digests/${{ matrix.variant.name }}/*
        if-no-files-found: error
        retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        variant:
          - name: live
            tag_suffix: ""
          - name: static
            tag_suffix: "-static"
    
    steps:
    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: /tmp/digests/${{ matrix.variant.name }}
        pattern: digests-${{ matrix.variant.name }}-*
        merge-multiple: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: hoiber
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_IMAGE }}
        tags: |
          type=ref,event=branch,suffix=${{ matrix.variant.tag_suffix }}
          type=semver,pattern={{version}},suffix=${{ matrix.variant.tag_suffix }}
          type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.variant.tag_suffix }}
          type=semver,pattern={{major}},suffix=${{ matrix.variant.tag_suffix }}
          type=raw,value=latest,enable={{is_default_branch}},suffix=${{ matrix.variant.tag_suffix }}

    - name: Create manifest list and push
      working-directory: /tmp/digests/${{ matrix.variant.name }}
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

    - name: Inspect image
      run: |
        docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}${{ matrix.variant.tag_suffix }}

  update-description:
    runs-on: ubuntu-latest
    needs:
      - merge
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: hoiber
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: hoiber/homepage-config-editor
        short-description: "Web-based GUI for creating and managing Homepage dashboard configurations"
        readme-filepath: ./README.md