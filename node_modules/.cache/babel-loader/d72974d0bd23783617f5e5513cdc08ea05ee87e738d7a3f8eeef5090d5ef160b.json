{"ast":null,"code":"var _jsxFileName = \"/Users/thomas/Documents/GitHub/homepage-config-editor/homepage-config-gui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Plus, Download, Trash2, Copy, Home, Settings, Upload, ChevronUp, ChevronDown } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomepageConfigGUI = () => {\n  _s();\n  const [selectedQuickAdd, setSelectedQuickAdd] = useState({});\n  const [importError, setImportError] = useState('');\n  const [importSuccess, setImportSuccess] = useState('');\n  const commonServices = {\n    plex: {\n      name: 'Plex',\n      href: 'http://localhost:32400',\n      description: 'Media streaming server',\n      icon: 'plex',\n      widget: {\n        type: 'plex',\n        url: 'http://localhost:32400',\n        key: 'your-plex-token'\n      }\n    },\n    sonarr: {\n      name: 'Sonarr',\n      href: 'http://localhost:8989',\n      description: 'TV series management',\n      icon: 'sonarr',\n      widget: {\n        type: 'sonarr',\n        url: 'http://localhost:8989',\n        key: 'your-api-key'\n      }\n    },\n    radarr: {\n      name: 'Radarr',\n      href: 'http://localhost:7878',\n      description: 'Movie collection manager',\n      icon: 'radarr',\n      widget: {\n        type: 'radarr',\n        url: 'http://localhost:7878',\n        key: 'your-api-key'\n      }\n    },\n    jellyfin: {\n      name: 'Jellyfin',\n      href: 'http://localhost:8096',\n      description: 'Free media streaming',\n      icon: 'jellyfin',\n      widget: {\n        type: 'jellyfin',\n        url: 'http://localhost:8096',\n        key: 'your-api-key'\n      }\n    },\n    portainer: {\n      name: 'Portainer',\n      href: 'http://localhost:9000',\n      description: 'Docker management',\n      icon: 'portainer',\n      widget: {\n        type: 'portainer',\n        url: 'http://localhost:9000',\n        key: 'your-api-key'\n      }\n    },\n    grafana: {\n      name: 'Grafana',\n      href: 'http://localhost:3000',\n      description: 'Monitoring dashboards',\n      icon: 'grafana',\n      widget: {\n        type: 'grafana',\n        url: 'http://localhost:3000',\n        key: 'your-api-key'\n      }\n    },\n    homeassistant: {\n      name: 'Home Assistant',\n      href: 'http://localhost:8123',\n      description: 'Home automation',\n      icon: 'homeassistant',\n      widget: {\n        type: 'homeassistant',\n        url: 'http://localhost:8123',\n        key: 'your-long-lived-token'\n      }\n    },\n    nextcloud: {\n      name: 'Nextcloud',\n      href: 'http://localhost:8080',\n      description: 'Personal cloud storage',\n      icon: 'nextcloud',\n      widget: {\n        type: 'nextcloud',\n        url: 'http://localhost:8080',\n        key: 'your-api-key'\n      }\n    }\n  };\n  const [config, setConfig] = useState({\n    groups: [{\n      id: 'group1',\n      name: 'Media',\n      services: [{\n        id: 'service1',\n        name: 'Plex',\n        href: 'http://localhost:32400',\n        description: 'Media streaming server',\n        icon: 'plex',\n        widget: null\n      }]\n    }]\n  });\n  const [editingGroup, setEditingGroup] = useState(null);\n  const [editingService, setEditingService] = useState(null);\n  const addGroup = () => {\n    const newGroup = {\n      id: `group${Date.now()}`,\n      name: 'New Group',\n      services: []\n    };\n    setConfig(prev => ({\n      ...prev,\n      groups: [...prev.groups, newGroup]\n    }));\n    setEditingGroup(newGroup.id);\n  };\n  const addService = (groupId, quickService = null) => {\n    const newService = quickService ? {\n      id: `service${Date.now()}`,\n      ...quickService\n    } : {\n      id: `service${Date.now()}`,\n      name: 'New Service',\n      href: 'http://localhost:3000',\n      description: '',\n      icon: '',\n      widget: null\n    };\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.map(group => group.id === groupId ? {\n        ...group,\n        services: [...group.services, newService]\n      } : group)\n    }));\n    if (!quickService) setEditingService(newService.id);\n  };\n  const quickAddService = groupId => {\n    const selectedService = selectedQuickAdd[groupId];\n    if (selectedService && commonServices[selectedService]) {\n      addService(groupId, commonServices[selectedService]);\n      setSelectedQuickAdd(prev => ({\n        ...prev,\n        [groupId]: ''\n      }));\n    }\n  };\n  const updateGroup = (groupId, updates) => {\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.map(group => group.id === groupId ? {\n        ...group,\n        ...updates\n      } : group)\n    }));\n  };\n  const updateService = (serviceId, updates) => {\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.map(group => ({\n        ...group,\n        services: group.services.map(service => service.id === serviceId ? {\n          ...service,\n          ...updates\n        } : service)\n      }))\n    }));\n  };\n  const deleteGroup = groupId => {\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.filter(group => group.id !== groupId)\n    }));\n  };\n  const deleteService = serviceId => {\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.map(group => ({\n        ...group,\n        services: group.services.filter(service => service.id !== serviceId)\n      }))\n    }));\n  };\n  const triggerImport = () => {\n    document.getElementById('yaml-import').click();\n  };\n  const generateYAML = () => {\n    let yamlStr = '';\n    config.groups.forEach(group => {\n      yamlStr += `- ${group.name}:\\n`;\n      group.services.forEach(service => {\n        yamlStr += `  - ${service.name}:\\n`;\n        yamlStr += `      href: ${service.href}\\n`;\n        if (service.description) yamlStr += `      description: ${service.description}\\n`;\n        if (service.icon) yamlStr += `      icon: ${service.icon}\\n`;\n        if (service.widget) {\n          yamlStr += `      widget:\\n`;\n          yamlStr += `        type: ${service.widget.type}\\n`;\n          if (service.widget.url) yamlStr += `        url: ${service.widget.url}\\n`;\n          if (service.widget.key) yamlStr += `        key: ${service.widget.key}\\n`;\n        }\n      });\n      yamlStr += '\\n';\n    });\n    return yamlStr;\n  };\n  const downloadConfig = () => {\n    const yamlContent = generateYAML();\n    const blob = new Blob([yamlContent], {\n      type: 'text/yaml'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'services.yaml';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generateYAML());\n    setImportSuccess('YAML copied to clipboard!');\n    setTimeout(() => setImportSuccess(''), 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: [/*#__PURE__*/_jsxDEV(Home, {\n            className: \"icon-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Homepage Config Builder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: triggerImport,\n            className: \"btn btn-green\",\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), \"Import YAML\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: copyToClipboard,\n            className: \"btn btn-gray\",\n            children: [/*#__PURE__*/_jsxDEV(Copy, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), \"Copy YAML\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadConfig,\n            className: \"btn btn-blue\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), \"Download\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"yaml-import\",\n        type: \"file\",\n        accept: \".yaml,.yml\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), importSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Success:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this), \" \", importSuccess]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setImportSuccess(''),\n          className: \"alert-close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), importError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 19\n          }, this), \" \", importError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setImportError(''),\n          className: \"alert-close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Service Groups\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addGroup,\n              className: \"btn btn-green btn-sm\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), \"Add Group\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), config.groups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: editingGroup === group.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: group.name,\n                  onChange: e => updateGroup(group.id, {\n                    name: e.target.value\n                  }),\n                  onBlur: () => setEditingGroup(null),\n                  onKeyDown: e => e.key === 'Enter' && setEditingGroup(null),\n                  className: \"input-edit\",\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                  onClick: () => setEditingGroup(group.id),\n                  className: \"group-title\",\n                  children: group.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addService(group.id),\n                  className: \"btn-icon\",\n                  children: /*#__PURE__*/_jsxDEV(Plus, {\n                    className: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedQuickAdd[group.id] || '',\n                  onChange: e => setSelectedQuickAdd(prev => ({\n                    ...prev,\n                    [group.id]: e.target.value\n                  })),\n                  className: \"select-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Quick add...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 23\n                  }, this), Object.entries(commonServices).map(([key, service]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: key,\n                    children: service.name\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => quickAddService(group.id),\n                  disabled: !selectedQuickAdd[group.id],\n                  className: \"btn btn-blue btn-xs\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteGroup(group.id),\n                  className: \"btn-icon btn-red\",\n                  children: /*#__PURE__*/_jsxDEV(Trash2, {\n                    className: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"services-list\",\n              children: [group.services.map((service, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"service-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"service-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"service-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"service-number\",\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 27\n                    }, this), editingService === service.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: service.name,\n                      onChange: e => updateService(service.id, {\n                        name: e.target.value\n                      }),\n                      onBlur: () => setEditingService(null),\n                      onKeyDown: e => e.key === 'Enter' && setEditingService(null),\n                      className: \"input-edit\",\n                      autoFocus: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => setEditingService(service.id),\n                      className: \"service-name\",\n                      children: service.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => deleteService(service.id),\n                    className: \"btn-icon btn-red\",\n                    children: /*#__PURE__*/_jsxDEV(Trash2, {\n                      className: \"icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"service-fields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"URL\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: service.href,\n                      onChange: e => updateService(service.id, {\n                        href: e.target.value\n                      }),\n                      className: \"input\",\n                      placeholder: \"http://localhost:3000\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: service.icon,\n                      onChange: e => updateService(service.id, {\n                        icon: e.target.value\n                      }),\n                      className: \"input\",\n                      placeholder: \"plex, gitlab, etc.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"field field-full\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: service.description,\n                      onChange: e => updateService(service.id, {\n                        description: e.target.value\n                      }),\n                      className: \"input\",\n                      placeholder: \"Optional description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 23\n                }, this)]\n              }, service.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)), group.services.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-state\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No services in this group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addService(group.id),\n                  className: \"btn btn-blue\",\n                  children: \"Add your first service\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, group.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)), config.groups.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(Home, {\n              className: \"icon-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No groups configured yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addGroup,\n              className: \"btn btn-blue\",\n              children: \"Create your first group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"yaml-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(Settings, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Generated services.yaml\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"yaml-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"yaml-header\",\n              children: \"services.yaml\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"yaml-content\",\n              children: /*#__PURE__*/_jsxDEV(\"code\", {\n                children: generateYAML() || '# No configuration yet'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tips-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Quick Tips\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u2022 Import existing services.yaml files to edit them\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u2022 Use \\\"Quick add\\\" dropdown for popular services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u2022 Click group/service names to edit them inline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u2022 Icons use Dashboard Icons (no extension needed)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u2022 Copy or download the YAML when you're done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(HomepageConfigGUI, \"BgOtT4GEZJ9W82eHGplBdOptTj8=\");\n_c = HomepageConfigGUI;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(HomepageConfigGUI, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"HomepageConfigGUI\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Plus","Download","Trash2","Copy","Home","Settings","Upload","ChevronUp","ChevronDown","jsxDEV","_jsxDEV","HomepageConfigGUI","_s","selectedQuickAdd","setSelectedQuickAdd","importError","setImportError","importSuccess","setImportSuccess","commonServices","plex","name","href","description","icon","widget","type","url","key","sonarr","radarr","jellyfin","portainer","grafana","homeassistant","nextcloud","config","setConfig","groups","id","services","editingGroup","setEditingGroup","editingService","setEditingService","addGroup","newGroup","Date","now","prev","addService","groupId","quickService","newService","map","group","quickAddService","selectedService","updateGroup","updates","updateService","serviceId","service","deleteGroup","filter","deleteService","triggerImport","document","getElementById","click","generateYAML","yamlStr","forEach","downloadConfig","yamlContent","blob","Blob","URL","createObjectURL","a","createElement","download","revokeObjectURL","copyToClipboard","navigator","clipboard","writeText","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","accept","style","display","groupIndex","value","onChange","e","target","onBlur","onKeyDown","autoFocus","Object","entries","disabled","index","placeholder","length","_c","App","_c2","$RefreshReg$"],"sources":["/Users/thomas/Documents/GitHub/homepage-config-editor/homepage-config-gui/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Plus, Download, Trash2, Copy, Home, Settings, Upload, ChevronUp, ChevronDown } from 'lucide-react';\nimport './App.css';\n\nconst HomepageConfigGUI = () => {\n  const [selectedQuickAdd, setSelectedQuickAdd] = useState({});\n  const [importError, setImportError] = useState('');\n  const [importSuccess, setImportSuccess] = useState('');\n  \n  const commonServices = {\n    plex: {\n      name: 'Plex',\n      href: 'http://localhost:32400',\n      description: 'Media streaming server',\n      icon: 'plex',\n      widget: { type: 'plex', url: 'http://localhost:32400', key: 'your-plex-token' }\n    },\n    sonarr: {\n      name: 'Sonarr',\n      href: 'http://localhost:8989',\n      description: 'TV series management',\n      icon: 'sonarr',\n      widget: { type: 'sonarr', url: 'http://localhost:8989', key: 'your-api-key' }\n    },\n    radarr: {\n      name: 'Radarr',\n      href: 'http://localhost:7878',\n      description: 'Movie collection manager',\n      icon: 'radarr',\n      widget: { type: 'radarr', url: 'http://localhost:7878', key: 'your-api-key' }\n    },\n    jellyfin: {\n      name: 'Jellyfin',\n      href: 'http://localhost:8096',\n      description: 'Free media streaming',\n      icon: 'jellyfin',\n      widget: { type: 'jellyfin', url: 'http://localhost:8096', key: 'your-api-key' }\n    },\n    portainer: {\n      name: 'Portainer',\n      href: 'http://localhost:9000',\n      description: 'Docker management',\n      icon: 'portainer',\n      widget: { type: 'portainer', url: 'http://localhost:9000', key: 'your-api-key' }\n    },\n    grafana: {\n      name: 'Grafana',\n      href: 'http://localhost:3000',\n      description: 'Monitoring dashboards',\n      icon: 'grafana',\n      widget: { type: 'grafana', url: 'http://localhost:3000', key: 'your-api-key' }\n    },\n    homeassistant: {\n      name: 'Home Assistant',\n      href: 'http://localhost:8123',\n      description: 'Home automation',\n      icon: 'homeassistant',\n      widget: { type: 'homeassistant', url: 'http://localhost:8123', key: 'your-long-lived-token' }\n    },\n    nextcloud: {\n      name: 'Nextcloud',\n      href: 'http://localhost:8080',\n      description: 'Personal cloud storage',\n      icon: 'nextcloud',\n      widget: { type: 'nextcloud', url: 'http://localhost:8080', key: 'your-api-key' }\n    }\n  };\n\n  const [config, setConfig] = useState({\n    groups: [\n      {\n        id: 'group1',\n        name: 'Media',\n        services: [\n          {\n            id: 'service1',\n            name: 'Plex',\n            href: 'http://localhost:32400',\n            description: 'Media streaming server',\n            icon: 'plex',\n            widget: null\n          }\n        ]\n      }\n    ]\n  });\n\n  const [editingGroup, setEditingGroup] = useState(null);\n  const [editingService, setEditingService] = useState(null);\n\n  const addGroup = () => {\n    const newGroup = {\n      id: `group${Date.now()}`,\n      name: 'New Group',\n      services: []\n    };\n    setConfig(prev => ({\n      ...prev,\n      groups: [...prev.groups, newGroup]\n    }));\n    setEditingGroup(newGroup.id);\n  };\n\n  const addService = (groupId, quickService = null) => {\n    const newService = quickService ? {\n      id: `service${Date.now()}`,\n      ...quickService\n    } : {\n      id: `service${Date.now()}`,\n      name: 'New Service',\n      href: 'http://localhost:3000',\n      description: '',\n      icon: '',\n      widget: null\n    };\n    \n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.map(group =>\n        group.id === groupId\n          ? { ...group, services: [...group.services, newService] }\n          : group\n      )\n    }));\n    if (!quickService) setEditingService(newService.id);\n  };\n\n  const quickAddService = (groupId) => {\n    const selectedService = selectedQuickAdd[groupId];\n    if (selectedService && commonServices[selectedService]) {\n      addService(groupId, commonServices[selectedService]);\n      setSelectedQuickAdd(prev => ({ ...prev, [groupId]: '' }));\n    }\n  };\n\n  const updateGroup = (groupId, updates) => {\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.map(group =>\n        group.id === groupId ? { ...group, ...updates } : group\n      )\n    }));\n  };\n\n  const updateService = (serviceId, updates) => {\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.map(group => ({\n        ...group,\n        services: group.services.map(service =>\n          service.id === serviceId ? { ...service, ...updates } : service\n        )\n      }))\n    }));\n  };\n\n  const deleteGroup = (groupId) => {\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.filter(group => group.id !== groupId)\n    }));\n  };\n\n  const deleteService = (serviceId) => {\n    setConfig(prev => ({\n      ...prev,\n      groups: prev.groups.map(group => ({\n        ...group,\n        services: group.services.filter(service => service.id !== serviceId)\n      }))\n    }));\n  };\n\n  const triggerImport = () => {\n    document.getElementById('yaml-import').click();\n  };\n\n  const generateYAML = () => {\n    let yamlStr = '';\n    config.groups.forEach(group => {\n      yamlStr += `- ${group.name}:\\n`;\n      group.services.forEach(service => {\n        yamlStr += `  - ${service.name}:\\n`;\n        yamlStr += `      href: ${service.href}\\n`;\n        if (service.description) yamlStr += `      description: ${service.description}\\n`;\n        if (service.icon) yamlStr += `      icon: ${service.icon}\\n`;\n        if (service.widget) {\n          yamlStr += `      widget:\\n`;\n          yamlStr += `        type: ${service.widget.type}\\n`;\n          if (service.widget.url) yamlStr += `        url: ${service.widget.url}\\n`;\n          if (service.widget.key) yamlStr += `        key: ${service.widget.key}\\n`;\n        }\n      });\n      yamlStr += '\\n';\n    });\n    return yamlStr;\n  };\n\n  const downloadConfig = () => {\n    const yamlContent = generateYAML();\n    const blob = new Blob([yamlContent], { type: 'text/yaml' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'services.yaml';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(generateYAML());\n    setImportSuccess('YAML copied to clipboard!');\n    setTimeout(() => setImportSuccess(''), 3000);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        {/* Header */}\n        <div className=\"header\">\n          <div className=\"header-title\">\n            <Home className=\"icon-lg\" />\n            <h1>Homepage Config Builder</h1>\n          </div>\n          <div className=\"header-buttons\">\n            <button onClick={triggerImport} className=\"btn btn-green\">\n              <Upload className=\"icon\" />\n              Import YAML\n            </button>\n            <button onClick={copyToClipboard} className=\"btn btn-gray\">\n              <Copy className=\"icon\" />\n              Copy YAML\n            </button>\n            <button onClick={downloadConfig} className=\"btn btn-blue\">\n              <Download className=\"icon\" />\n              Download\n            </button>\n          </div>\n        </div>\n\n        <input\n          id=\"yaml-import\"\n          type=\"file\"\n          accept=\".yaml,.yml\"\n          style={{ display: 'none' }}\n        />\n\n        {/* Success/Error Messages */}\n        {importSuccess && (\n          <div className=\"alert alert-success\">\n            <span><strong>Success:</strong> {importSuccess}</span>\n            <button onClick={() => setImportSuccess('')} className=\"alert-close\">×</button>\n          </div>\n        )}\n\n        {importError && (\n          <div className=\"alert alert-error\">\n            <span><strong>Error:</strong> {importError}</span>\n            <button onClick={() => setImportError('')} className=\"alert-close\">×</button>\n          </div>\n        )}\n\n        {/* Main Content */}\n        <div className=\"main-grid\">\n          {/* Config Builder */}\n          <div className=\"config-section\">\n            <div className=\"section-header\">\n              <h2>Service Groups</h2>\n              <button onClick={addGroup} className=\"btn btn-green btn-sm\">\n                <Plus className=\"icon\" />\n                Add Group\n              </button>\n            </div>\n\n            {config.groups.map((group, groupIndex) => (\n              <div key={group.id} className=\"group-card\">\n                <div className=\"group-header\">\n                  <div>\n                    {editingGroup === group.id ? (\n                      <input\n                        type=\"text\"\n                        value={group.name}\n                        onChange={(e) => updateGroup(group.id, { name: e.target.value })}\n                        onBlur={() => setEditingGroup(null)}\n                        onKeyDown={(e) => e.key === 'Enter' && setEditingGroup(null)}\n                        className=\"input-edit\"\n                        autoFocus\n                      />\n                    ) : (\n                      <h3 onClick={() => setEditingGroup(group.id)} className=\"group-title\">\n                        {group.name}\n                      </h3>\n                    )}\n                  </div>\n                  <div className=\"group-controls\">\n                    <button onClick={() => addService(group.id)} className=\"btn-icon\">\n                      <Plus className=\"icon\" />\n                    </button>\n                    <select\n                      value={selectedQuickAdd[group.id] || ''}\n                      onChange={(e) => setSelectedQuickAdd(prev => ({ ...prev, [group.id]: e.target.value }))}\n                      className=\"select-sm\"\n                    >\n                      <option value=\"\">Quick add...</option>\n                      {Object.entries(commonServices).map(([key, service]) => (\n                        <option key={key} value={key}>{service.name}</option>\n                      ))}\n                    </select>\n                    <button \n                      onClick={() => quickAddService(group.id)}\n                      disabled={!selectedQuickAdd[group.id]}\n                      className=\"btn btn-blue btn-xs\"\n                    >\n                      Add\n                    </button>\n                    <button onClick={() => deleteGroup(group.id)} className=\"btn-icon btn-red\">\n                      <Trash2 className=\"icon\" />\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"services-list\">\n                  {group.services.map((service, index) => (\n                    <div key={service.id} className=\"service-card\">\n                      <div className=\"service-header\">\n                        <div className=\"service-info\">\n                          <span className=\"service-number\">{index + 1}</span>\n                          {editingService === service.id ? (\n                            <input\n                              type=\"text\"\n                              value={service.name}\n                              onChange={(e) => updateService(service.id, { name: e.target.value })}\n                              onBlur={() => setEditingService(null)}\n                              onKeyDown={(e) => e.key === 'Enter' && setEditingService(null)}\n                              className=\"input-edit\"\n                              autoFocus\n                            />\n                          ) : (\n                            <span \n                              onClick={() => setEditingService(service.id)}\n                              className=\"service-name\"\n                            >\n                              {service.name}\n                            </span>\n                          )}\n                        </div>\n                        <button \n                          onClick={() => deleteService(service.id)}\n                          className=\"btn-icon btn-red\"\n                        >\n                          <Trash2 className=\"icon\" />\n                        </button>\n                      </div>\n                      \n                      <div className=\"service-fields\">\n                        <div className=\"field\">\n                          <label>URL</label>\n                          <input\n                            type=\"text\"\n                            value={service.href}\n                            onChange={(e) => updateService(service.id, { href: e.target.value })}\n                            className=\"input\"\n                            placeholder=\"http://localhost:3000\"\n                          />\n                        </div>\n                        <div className=\"field\">\n                          <label>Icon</label>\n                          <input\n                            type=\"text\"\n                            value={service.icon}\n                            onChange={(e) => updateService(service.id, { icon: e.target.value })}\n                            className=\"input\"\n                            placeholder=\"plex, gitlab, etc.\"\n                          />\n                        </div>\n                        <div className=\"field field-full\">\n                          <label>Description</label>\n                          <input\n                            type=\"text\"\n                            value={service.description}\n                            onChange={(e) => updateService(service.id, { description: e.target.value })}\n                            className=\"input\"\n                            placeholder=\"Optional description\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {group.services.length === 0 && (\n                    <div className=\"empty-state\">\n                      <p>No services in this group</p>\n                      <button onClick={() => addService(group.id)} className=\"btn btn-blue\">\n                        Add your first service\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n\n            {config.groups.length === 0 && (\n              <div className=\"empty-state\">\n                <Home className=\"icon-xl\" />\n                <p>No groups configured yet</p>\n                <button onClick={addGroup} className=\"btn btn-blue\">\n                  Create your first group\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* YAML Preview */}\n          <div className=\"yaml-section\">\n            <div className=\"section-header\">\n              <Settings className=\"icon\" />\n              <h2>Generated services.yaml</h2>\n            </div>\n            \n            <div className=\"yaml-preview\">\n              <div className=\"yaml-header\">services.yaml</div>\n              <pre className=\"yaml-content\">\n                <code>{generateYAML() || '# No configuration yet'}</code>\n              </pre>\n            </div>\n\n            <div className=\"tips-card\">\n              <h3>Quick Tips</h3>\n              <ul>\n                <li>• Import existing services.yaml files to edit them</li>\n                <li>• Use \"Quick add\" dropdown for popular services</li>\n                <li>• Click group/service names to edit them inline</li>\n                <li>• Icons use Dashboard Icons (no extension needed)</li>\n                <li>• Copy or download the YAML when you're done</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return <HomepageConfigGUI />;\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}